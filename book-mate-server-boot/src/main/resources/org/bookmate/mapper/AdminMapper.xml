<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bookmate.dao.AdminDao" >
    
    <resultMap id="BaseResultMap" type="org.bookmate.entities.Admin" >
        <id column="admin_id" property="adminId" jdbcType="INTEGER" />
        <result column="admin_username" property="adminUsername" jdbcType="VARCHAR" />
        <result column="admin_password" property="adminPassword" jdbcType="VARCHAR" />
        <result column="admin_work" property="adminWork" jdbcType="VARCHAR" />
        <result column="admin_email" property="adminEmail" jdbcType="VARCHAR" />
        <result column="admin_create_time" property="adminCreateTime" jdbcType="DATE" />
    </resultMap>

	<!-- 根据管理员名查询管理员实体类 -->
	<select id="selectAdminByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from admin where admin_username = #{admin_username}
	</select>
	
	<!-- 插入管理员实体类 -->
	<insert id="insertAdmin" parameterType="org.bookmate.entities.Admin">
		insert into admin(admin_id, admin_username, admin_password, admin_work, admin_email, admin_create_time)
		values(#{adminId}, #{adminUsername}, #{adminPassword}, #{adminWork}, #{adminEmail}, #{adminCreateTime})
	</insert>
	
	<!-- 查询所有管理员实体类 -->
	<select id="selectAllAdmin" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select * from admin
	</select>
	
	<!-- 根据id删除管理员 -->
	<delete id="deleteAdmin" parameterType="java.lang.Integer">
		delete from admin where admin_id = #{admin_id}
	</delete>
	
	<!-- 根据id查询管理员实体类 -->
	<select id="selectAdminById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select * from admin where admin_id = #{admin_id}
	</select>
	
	<!-- 更新管理员数据 -->
	<update id="updateAdmin" parameterType="org.bookmate.entities.Admin">
		update admin set admin_password = #{adminPassword}, admin_work = #{adminWork},
		admin_email = #{adminEmail}, admin_create_time = #{adminCreateTime}, 
		admin_username = #{adminUsername} where admin_id = #{adminId}
	</update>
	
	<!-- 根据管理员名进行模糊查询 -->
	<select id="selectAdminByUsernameLike" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from admin where admin_username like '%${name}%'
	</select>















	<resultMap id="AmBaseResultMap" type="org.bookmate.entities.AdminMessage" >
		<id column="admin_message_id" property="adminMessageId" jdbcType="INTEGER" />
		<result column="admin_message_title" property="adminMessageTitle" jdbcType="VARCHAR" />
		<result column="admin_message_content" property="adminMessageContent" jdbcType="LONGVARCHAR" />
		<result column="admin_message_time" property="adminMessageTime" jdbcType="DATE" />
		<result column="admin_id" property="adminId" jdbcType="INTEGER" />
	</resultMap>

	<!-- 管理员消息和对应关联管理员实体类结果集映射 -->
	<resultMap
			type="org.bookmate.entities.AdminMessage" id="adminMessageAndAdminRM" extends="AmBaseResultMap">
		<association property="admin" javaType="org.bookmate.entities.Admin">
			<id column="admin_id" property="adminId" jdbcType="INTEGER" />
			<result column="admin_username" property="adminUsername" jdbcType="VARCHAR" />
			<result column="admin_password" property="adminPassword" jdbcType="VARCHAR" />
			<result column="admin_work" property="adminWork" jdbcType="VARCHAR" />
			<result column="admin_email" property="adminEmail" jdbcType="VARCHAR" />
			<result column="admin_create_time" property="adminCreateTime" jdbcType="DATE" />
		</association>
	</resultMap>

	<!-- 查询所有的管理员通知 -->
	<select id="selectAllAdminMessage" resultMap="AmBaseResultMap">
		select * from admin_message
	</select>

	<!-- 查询所有的管理员通知和对应的发布用户 -->
	<select id="selectAllAdminMessageAndAdmin" resultMap="adminMessageAndAdminRM">
		select * from admin_message m, admin a
		where m.admin_id = a.admin_id
	</select>

	<!-- 添加管理员通知 -->
	<insert id="insertAdminMessage" parameterType="org.bookmate.entities.AdminMessage" >
		insert into admin_message(admin_message_id,admin_message_title,admin_message_content,admin_message_time,admin_id)
		values(#{adminMessageId},#{adminMessageTitle},#{adminMessageContent},#{adminMessageTime},#{adminId})
	</insert>

	<!-- 编辑管理员通知 -->
	<update id="updateAdminMessage" parameterType="org.bookmate.entities.AdminMessage">
		update admin_message set
								 admin_message_title=#{adminMessageTitle},
								 admin_message_content=#{adminMessageContent},
								 admin_message_time=#{adminMessageTime},
								 admin_id = #{adminId}
		where admin_message_id = #{adminMessageId}
	</update>

	<!-- 获取管理员通知 -->
	<select id="getAdminMessage" parameterType="java.lang.Integer" resultMap="adminMessageAndAdminRM">
		select * from admin_message m, admin a where m.admin_id = a.admin_id
												 and m.admin_message_id = #{adminMessageId}
	</select>

	<!-- 删除管理员通知 -->
	<delete id="deleteAdminMessage" parameterType="java.lang.Integer">delete from admin_message where admin_message_id = #{admin_message_id}</delete>

	<!-- 根据管理员通知标题进行模糊查询 -->
	<select id="selectAdminMessageByTitleLike" parameterType="java.lang.String" resultMap="AmBaseResultMap">
		select * from admin_message where admin_message_title like '%${title}%'
	</select>
</mapper>